import librosa
from pydub import AudioSegment, effects
import soundfile as sf


def preprocess(path_file: str, output_file: str = None, trim=False):
    """
    Preprocessing handles the following
    - resample to 22050, 16bit, mono
    - trim leading, trailing noise
    - normalize volume
    """
    # resample to 22050, 16 bit, mono, trim leading, trailing noise
    target_samplerate = 22050
    bitrate = "PCM_16"
    # leading, trailing volume lower than trim_db will be trimmed, in order to remove noise generated by svc
    trim_db = 15
    data, samplerate = librosa.load(path_file, mono=True)
    data = data.T
    data_resample = librosa.resample(data, orig_sr=samplerate, target_sr=target_samplerate)
    data_resample_mono = librosa.to_mono(data_resample)

    if trim:
        output_data = librosa.effects.trim(data_resample_mono, top_db=trim_db)[0]
    else:
        output_data = data_resample_mono

    if output_file is None:
        output_file = path_file
    sf.write(output_file, output_data, target_samplerate, subtype=bitrate)

    # normalize vol
    raw_sound = AudioSegment.from_file(output_file, "wav")
    normalized_sound = effects.normalize(raw_sound)
    normalized_sound.export(output_file, format="wav")


if __name__ == "__main__":
    preprocess("common_voice_zh-HK_22394333.mp3_0key_ChugokuUsagiNormal.flac", "resample_test.wav", trim=False)
